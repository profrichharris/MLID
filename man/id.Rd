% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/id.R
\name{id}
\alias{id}
\title{(Multilevel) Index of dissimilarity}
\usage{
id(data, vars, levels = NA, expected = F, nsims = 100)
}
\arguments{
\item{data}{a data frame with \code{ncol(data) >= 2}. Each row of the data represents
a neighbourhood or some other areal unit for which counts of population have been made.}

\item{vars}{a character or numeric vector of length 2 or 3 giving either the names
or columns positions of the variables in \code{data} in the following order
\enumerate{
   \item the number of population group Y in each neighbourhood
   \item the number of population group X in each neighbourhood
   \item (optional) The total population in each neighbourhood
}}

\item{levels}{a character or numeric vector of minimum length 1 identifying either the names
or columns positions of the variables in \code{data} that record to which higher-level grouping
each lower-lower level unit belongs. \code{length(levels) + 1} is the number of levels in the
model. If \code{levels = NA}, the default, then only the standard index of dissimilarity is
calculated.}

\item{expected}{a logical scaler. Should the expected value of the ID under randomisation
be calculated? Requires a measure of the total population in each neighbourhood. If omitted
from \code{vars} that total will be calculated as \code{sum(X + Y)}.}

\item{nsims}{a vector, the number of random draws to be used for calculating the expected value.
Default is 100.}
}
\value{
an object of class \code{index}. This is a value between zero and one where 0 implies no
segreation, and 1 means 'complete segregation' - wherever group Y is located,
X is not (and vice versa). If \code{expected = T} the expected value under randomisation also
is given. In addition, the object contains the following attributes:
\enumerate{
   \item \code{attr(x, "ols")} an object of class \code{lm}. The OLS regression used to
   calculate the ID. Useful for identifying significant residuals (see Example below)
   \item \code{attr(x, "vars")} the names of Y and X in \code{data}
}
and, for a multilevel model,
\enumerate{
   \item \code{attr(index, "mlm")} an object of class \code{lmerMod}. Fitted using
   the \code{lme4} package
   \item \code{attr(index, "variance")} the percentage of the total variance due to each level
   of the model. This indicates the scale at which the segregation is most prominent
   \item \code{attr(index, "holdback")} records the percentage change in the ID that occurs if,
   at each level, its contribution to the ID is heldback (set to zero)
}
}
\description{
\code{id} Returns either the standard index of dissimilarity (ID) or its multilevel equivalent
}
\details{
If \code{y} is the number of population group Y living in each neighbourhood
and \code{x} is the number of population group X then \code{id} measures how unevenly
distributed are the two groups relative to one another and is a measure of segregation.
In addition, for geographically hierarchichal data, scale effects may be explored to
examine the scale of geographical clustering.

\code{print(index)} displays the ID value, the expected value of the ID under randomisation
(NA if not calculated), and, for a multilevel model, the percentage share of the variance at
each level and the holdback scores.
}
\examples{
data("ethnicities")
head(ethnicities)

## Caculate the standard index value
id(ethnicities, vars = c("Bangladeshi", "WhiteBrit"))

## Calculate also the expected value under randomisation
id(ethnicities, vars = c("Bangladeshi", "WhiteBrit"), expected = T)
id(ethnicities, vars = c("Bangladeshi", "WhiteBrit", "Persons"), expected = T)

## The index is fitted as a standard OLS model so we can
## extract the standardized residuals and, in this example, look for regions where the share
## of the Bangladeshi population is unusualy high with respect to the White British
index <- id(ethnicities, vars = c("Bangladeshi", "WhiteBrit"))
resids <- rstandard(index)
table(ethnicities$RGN[resids > 2.58])

## A multilevel model
id(ethnicities, vars = c("Bangladeshi", "WhiteBrit"), levels=c("LLSOA","MLSOA","LAD","RGN"))
id(ethnicities, vars = c("Bangladeshi", "WhiteBrit", "Persons"),
levels=c("LLSOA","MLSOA","LAD","RGN"), expected = T)
}
